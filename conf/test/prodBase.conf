# Copyright 2017 TEAM PER LA TRASFORMAZIONE DIGITALE
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "../application.conf"

#only in test environment!
play.ws.ssl.loose.acceptAnyCertificate="true"
play.ws.ssl.loose.allowWeakCiphers="true"

pac4j.authenticator = "ldap"
pac4j.ldap.url = "ldap://idm.teamdigitale.test:636"
pac4j.ldap.base_user_dn = "cn=users,cn=accounts,dc=daf,dc=gov,dc=it"
pac4j.ldap.login_attribute = "mail"
pac4j.ldap.username_attribute = "uid"
pac4j.ldap.bind_dn =  "uid=application,cn=users,cn=accounts,dc=daf,dc=gov,dc=it"
#pac4j.ldap.bind_pwd = "xxxxxx"


app.ckan.url = "http://ckan.default.svc.cluster.local:5000"
#app.ckan.auth.token = "XXXXXXXXXXXXXXXX"


app.type = "prod"

app.local.url = "http://datipubblici.default.svc.cluster.local:9000"
security.manager.host = "http://security-manager.default.svc.cluster.local:9000"

catalog-manager{
  host = "http://catalog-manager.default.svc.cluster.local:9000/catalog-manager/v1"
  notificationPath = "kafka/notifications/add"
}

openDataUser = "open_data_user"
openDataGroup = "open_data_group"

sys-admin = "andrea"

superset {
  url = "https://bi.dataportal.daf.teamdigitale.test"
  openDataUrl="https://bi.open.daf.teamdigitale.test"
  user = "alessandro"
  pass = "XXXXXXXXX"
  openDataUser="open_data_user"
}

daf-cacher {
  url = "http://daf-cacher-fe.default.svc.cluster.local:4567/plot/"
}


grafana {
  url = "http://grafana.default.svc.cluster.local:3000"
  #user = "alessandro@teamdigitale.governo.it"
  apiKey = "eyJrIjoiT2dEM0ZpeVNWY3lkRk5HZXdNbkdmM2RnNmRDdXRJNXYiLCJuIjoiYWRtaW4iLCJpZCI6MX0="
  user = "alessandro"
  pass = "XXXXXXXXX"
}

metabase {
  url = "https://graph.daf.teamdigitale.test"
  #user = "alessandro@teamdigitale.governo.it"
  #pass = "savesamu7881giuggibelva"
  user = "alessandro"
  #pass = "XXXXXXXXX"
}

tdmetabase {
  url = "https://dashboard.teamdigitale.governo.test"
  user = "ale.ercolani@gmail.com"
  pass = "XXXXXXXXXXX"
}



mongo {
  host = "ckan.default.svc.cluster.local"
  port = 27017
  database = "ckan"
  databaseAdmin = "admin"
  collection = "catalog_test"
  username = "ckan"
  usernameAdmin = "root"
  #password = "XXXXXXXXXXXXXX"
  collNotificationName = "notifications"
  collSubscriptionName = "subscriptions"

}

kylo {
  url = "http://tba-kylo-services.default.svc.cluster.local:8420"
  inferUrl = "http://tba-kylo-services.default.svc.cluster.local:8420/api/v1/schema-discovery/hive/sample-file"
  systemUrl = "http://tba-kylo-services.default.svc.cluster.local:8420/api/v1/feedmgr/util/system-name?name="
  csvSerde = """{   "name": "CSV",   "objectClassType": "com.thinkbiganalytics.discovery.parsers.csv.CSVFileSchemaParser",   "objectShortClassType": "CSVFileSchemaParser",   "supportsBinary": false,   "generatesHiveSerde": true,   "clientHelper": null }"""
  jsonSerde = """{"name":"JSON","objectClassType":"com.thinkbiganalytics.discovery.parsers.hadoop.JsonFileSchemaParser","objectShortClassType":"JsonFileSchemaParser","supportsBinary":false,"generatesHiveSerde":true,"clientHelper":null}"""
  user = "dladmin"
  pwd = "XXXXXXXXXX"
}

elasticsearch {
  url = "elk-master-1.teamdigitale.test"
  port = 9200
  max_result_window = 20000
}

kafka-proxy {
  url = "http://kafka-http-proxy.default.svc.cluster.local:8085"
}

dataset-manager {
  url = "https://api.daf.teamdigitale.test/dataset-manager/v1/dataset/"
  email =  "open_data_user@daf.gov.it"
}

systemNotificationTypeName = "system"

notificationType = [
  {
    name = "infoType"
    value = 1
  },
  {
    name = "successType"
    value = 2
  },
  {
    name = "errorType"
    value = 3
  }
]